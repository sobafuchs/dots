# unbinds default prefix and sets to <C-a>
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# set -g default-terminal "xterm-256color"
set -g window-active-style 'fg=default,bg=default'

# Enable mouse mode
set-window-option -g mouse on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namesapce pbcopy"
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi V send -X rectangle-toggle

# split panes using | and -
bind-key \\ split-window -h
bind - split-window -v
unbind '"'
unbind %


# auto reload tmux conf
bind r source-file ${HOME}/.tmux.conf \; display-message "source-file reloaded"

##################
# Colors
##################

# set -g status-bg colour235
# set -g status-fg colour39

# Smart pane switching aware of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# For binding 'y' to copy and exiting selection mode
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -sel clip -i'

# For binding 'Enter' to copy and not leave selection mode
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe 'xclip -sel clip -i' '\;'  send -X clear-selection
